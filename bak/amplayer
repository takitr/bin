

VideoView-->MediaPlayer-->AmSuperPlayer-->AmlogicPlayer->LibPlayer

Related settings:
media.amplayer.loglevel
----Amplayer's message control level,int, 50 is default,-1 is close all,100 show all
media.amsuperplayer.enable
amplayer播放器总开关，true 或者false，没有设置为false,现在默认是打开的；
media.amplayer.audio-all
所有音频都默认硬件解码，true 或者false，没有设置为false
media.amplayer.enable-acodecs
支持的硬件编码格式，格式"aac,wmv"
media.amsuperplayer.m4aplayer
字符串，支持的格式：PV_PLAYER，SONIVOX_PLAYER，STAGEFRIGHT_PLAYER，AMLOGIC_PLAYER，AMSUPER_PLAYER
media.amplayer.lpbufferlevel
底层streambuffer level控制，float，=data/buffersize。默认值0.02，对于高清可以加大，标清减少
意思就是当底层buf数据量>0.02开始播放，如果要一次缓冲更多时间再播放可以加大这个数值；
media.amplayer.buffertime
streambuffer控制，float值，=data*8/bitrate,缓冲多少秒数据开始播放,默认不设置,如果设置上就覆盖掉lbbufferlevel的设置;///buffertime在某些情况下可能失效,比如变码率或者bitrate计算不出来,计算错误等;失效的情况以lpbufferlevel值为 准;//秒为单位,支持小数;比如1.5表示1.5s
libplayer.ffmpeg.lpbufsizemax
lpbufffer的大小，默认在64M，字节为单位。
libplayer.ffmpeg.lpbufblocksize
//http每次读的大小，字节为单位。
libplayer.ffmpeg.maxreadseek
lpbuffer里面读seek的最大值，单位字节，比如向前seek的时候，如果数据没有下载下来，是直接seek过去还是读过去；这个值应该比lpbufer小很多，默认值3M；
media.amplayer.delaybuffering
延迟进入缓冲状态,避免网速很快的情况下也进入换冲状态;//开始播放,延迟delaybuffering的时间才允许进入buffering状态;如果bufferlevel加大,可以适当加大这个 值;1,2s可能比较合适;
media.amplayer.noaudio
不播放视频中的音频；调试用；
media.amplayer.novideo
不播放视频文件中的视频，调试用；//lpbufer的大小;都是字节为单位
libplayer.ffmpeg.lpbufmaxbuflv
限制lpbuffer缓冲的最高值，=buffer data/buffer size，这个一般用来调试，不需要任何设置。默认我们缓冲2/3的buffer大小的数据，比如64M，我们缓冲48M，后面的24M用来保留以前播放过的数据。
media.amplayer.stopbuflevel
限制硬件的streambuffer缓冲数据量，减少延迟。默认值0.03;
只对streamsource接口有效，使用四套reamsource接口的播放器现在主要有netflix.apk，adobe air,wifi display;
media.apts.offset
在播放开始时对audio数据人为添加一定量的offset，达到更好的同步效果。初始值默认为0，在未设置的情况下也认为是0;
可以通过微调这个参数，来调整apts和vpts的差距，单位为1/90000 s
media.libplayer.fastswitch
播放器解析切换模式,0,1,2,数字越大越快,0为一般模式,兼容性最好,1为普通快速,兼容性已经经过验证;2.可以在特殊情况下使用,暂时没有经过大量验证.
media.libplayer.seek.fwdsearch
播放器seek方向控制，有0和1两种取值，0表示向前seek(即当前帧的前一帧方向),1表示向后seek。
media.libplayer.dumpmode
//老代码默认dump到/tmp/目录，最新代码默认dump到/data/tmp/目录；播放器dump文件开关，dumpmode值的含义如下：
#define DUMP_READ_RAW_DATA (1<<0)
#define DUMP_WRITE_RAW_DATA (1<<1)
#define DUMP_READ_ES_VIDEO (1<<2)
#define DUMP_WRITE_ES_VIDEO (1<<3)
#define DUMP_READ_ES_AUDIO (1<<4)
#define DUMP_WRITE_ES_AUDIO (1<<5)
media.libplayer.dumppath
dump路径设置，老代码默认/tmp/目录，这个设置无效；
最新trunk代码，默认/data/tmp/，支持这个设置；

media.libplayer.startplaybuf //k为单位
开始播放的数据量，比如设置为1024，表示只有当数据缓冲到1M的时候，播放器才通知上层，底层prepared好了，可以发送start命令了；这个只对网络流有效。

